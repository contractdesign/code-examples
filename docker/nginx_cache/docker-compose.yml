

# to get rid of cached containers
# docker container prune

# TODO: assign fixed IP addresses

version: '3'

# for organization, see https://nickjanetakis.com/blog/docker-tip-10-project-structure-with-multiple-dockerfiles-and-docker-compose

services:
 

    cache:
        container_name: cache
        image: "nginx:stable"
        volumes:
            - ./cache/nginx.conf:/etc/nginx/nginx.conf
        networks:
            testing_net:
                ipv4_address: 172.28.1.2


#docker run --name mynginx2 -v /var/www:/usr/share/nginx/html:ro \
#
#               -v /var/nginx/conf:/etc/nginx:ro -P -d nginx

    webserver:
        container_name: webserver
        image: "nginx:stable"
        volumes:
            - ./webserver/nginx.conf:/etc/nginx/nginx.conf
            - ./webserver/assets:/etc/nginx/html
        networks:
            testing_net:
                ipv4_address: 172.28.1.3


networks:
    testing_net:
        ipam:
            driver: default
            config:
                - subnet: 172.28.1.0/8
